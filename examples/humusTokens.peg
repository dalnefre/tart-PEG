#
# Lexical tokens for the Humus programming language (cf. humusSyntax.peg)
#

tokens  <- _ token* EOF
token   <- symbol
         / number
         / char
         / string
         / ident
         / punct

symbol  <- '#' (punct / name)

number  <- '-'? [0-9]+ ('#' [0-9a-zA-Z]+)? _

char    <- "'" (!"'" qchar) "'" _
string  <- '"' (!'"' qchar)+ '"' _
qchar   <- '\\' [nrt'"\[\]\\]
         / '\\u' [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]
         / !'\\' .

# ident   <- !number (!punct .)+
ident   <- name
name    <- [-0-9a-zA-Z!%&'*+/?@^_~]+ _
punct   <- [#$(),.:;=\[\\\]] _

_       <- &punct                           # token boundary
         / (space / comment)*
comment <- '#' space (!EOL .)*
space   <- [ \t-\r]
EOL     <- '\n'
         / '\r' '\n'?
EOF     <- !.
