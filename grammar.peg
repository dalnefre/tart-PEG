#
# PEG formally describing its own ASCII syntax (based on Bryan Ford 2014)
#

# Hierarchical syntax
Grammar     <- _ Rule+ EOF
Rule        <- Name LEFTARROW Expression
Expression  <- Sequence (SLASH Sequence)*
Sequence    <- Prefix*
Prefix      <- (AND / NOT)? Suffix
Suffix      <- Primary (QUESTION / STAR / PLUS)?
Primary     <- Name !LEFTARROW
             / OPEN Expression CLOSE
             / Literal
             / Class
             / DOT

# Lexical syntax
Name        <- [a-zA-Z_] [a-zA-Z_0-9]* _
Literal     <- ["] (!["] Character)+ ["] _
             / ['] (!['] Character)+ ['] _
Class       <- "[" (!"]" Range)+ "]" _
Range       <- Character "-" Character / Character
Character   <- "\\" [nrt'"[\]\\]
             \ "\\u" [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]
             \ !"\\" .

LEFTARROW   <- "<-" _
SLASH       <- "/" _
AND         <- "&" _
NOT         <- "!" _
QUESTION    <- "?" _
STAR        <- "*" _
PLUS        <- "+" _
OPEN        <- "(" _
CLOSE       <- ")" _
DOT         <- "." _

_           <- (Space / Comment)*   # optional whitespace
Comment     <- "#" (!EOL .)*
Space       <- [ \t-\r]
EOL         <- "\n"
             / "\r" "\n"?
EOF         <- !.
